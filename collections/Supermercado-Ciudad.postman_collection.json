{
	"info": {
		"_postman_id": "0b58ea83-ff14-4a69-a683-7a6ae5f18633",
		"name": "Supermercado-Ciudad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22977088"
	},
	"item": [
		{
			"name": "Asociar un nuevo supermercado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{supermercado_id}}"
					]
				},
				"description": "Esta solicitud crea una nueva ciudad. La nueva ciudad debe estar asociada a un país existente. El API retorna el recurso creado con el ID asignado."
			},
			"response": [
				{
					"name": "Agregar una ciudad",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n      \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n      \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Asociar un supermercado que no existe a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de error esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"00000000-0000-0000-0000-000000000000"
					]
				},
				"description": "Esta solicitud crea una nueva ciudad. La nueva ciudad debe estar asociada a un país existente. El API retorna el recurso creado con el ID asignado."
			},
			"response": [
				{
					"name": "Agregar una ciudad",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n      \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n      \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener todos los supermercados que pertenecen a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				},
				"description": "Esta solicitud obtiene una ciudad asignada a un ID existente."
			},
			"response": [
				{
					"name": "Obtener una ciudad",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{supermercado_id}}"
					]
				},
				"description": "Esta solicitud obtiene una ciudad asignada a un ID existente."
			},
			"response": [
				{
					"name": "Obtener una ciudad",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Obtener un supermercado que no está asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el ID dado no se encuentra asociado a la ciudad\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/{{supermercado_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{supermercado_id_2}}"
					]
				},
				"description": "Esta solicitud obtiene una ciudad asignada a un ID existente."
			},
			"response": [
				{
					"name": "Obtener una ciudad",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Actualizar los supermercados que están asociados a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de respuesta es 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{supermercado_id_2}}\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				},
				"description": "Esta solicitud permite actualizar una ciudad asociada a un ID no válido. El API retorna un código de error con un mensaje asociado."
			},
			"response": [
				{
					"name": "Actualizar una ciudad",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Santiago de Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Santiago de Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Actualizar los supermercados asociados a una ciudad, con un supermercado inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"COdigo de estado es 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el ID dado no fue encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{supermercado_id_2}}\"\r\n   },\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets"
					]
				},
				"description": "Esta solicitud permite actualizar una ciudad asociada a un ID no válido. El API retorna un código de error con un mensaje asociado."
			},
			"response": [
				{
					"name": "Actualizar una ciudad",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nombre\": \"Santiago de Cali\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120005\",\n    \"nombre\": \"Santiago de Cali\",\n    \"pais\": {\n        \"codigo\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n        \"nombre\": \"Colombia\"\n    }\n}"
				}
			]
		},
		{
			"name": "Eliminar un supermercado asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/{{supermercado_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{supermercado_id_2}}"
					]
				},
				"description": "Esta solicitud elimina una ciudad asociada a un ID existente."
			},
			"response": [
				{
					"name": "Borrar una ciudad",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un supermercado que no estaba previamente asociado a una ciudad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Codigo de estado es 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Obtener mensaje de respuesta esperado\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"El supermercado con el ID dado no se encuentra asociado a la ciudad\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/cities/{{ciudad_id}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"cities",
						"{{ciudad_id}}",
						"supermarkets",
						"{{supermercado_id}}"
					]
				},
				"description": "Esta solicitud elimina una ciudad asociada a un ID existente."
			},
			"response": [
				{
					"name": "Borrar una ciudad",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/ciudades/{{ciudad_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ciudades",
								"{{ciudad_id_1}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "<Basic Auth Username>",
				"type": "string"
			},
			{
				"key": "password",
				"value": "<Basic Auth Password>",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (!pm.globals.has('ciudad_id')) {",
					"    const postRequest1 = {",
					"      url: pm.variables.get('baseUrl') + '/cities',",
					"      method: 'POST',",
					"      header: {",
					"        'Content-Type': 'application/json',",
					"        'X-Foo': 'bar'",
					"      },",
					"      body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify(",
					"        {",
					"          \"nombre\": \"Guayaquil\",",
					"          \"pais\": \"Ecuador\",",
					"          \"habitantes\": 1000000",
					"        }",
					"        )",
					"      }",
					"    };",
					"    pm.sendRequest(postRequest1, (error, response) => {",
					"      var data = response.json()",
					"      pm.globals.set(\"ciudad_id\", error ? null : data.id);",
					"    });",
					"}",
					"",
					"if (!pm.globals.has('supermercado_id')) {",
					"    const postRequest2 = {",
					"      url: pm.variables.get('baseUrl') + '/supermarkets',",
					"      method: 'POST',",
					"      header: {",
					"        'Content-Type': 'application/json',",
					"        'X-Foo': 'bar'",
					"      },",
					"      body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify(",
					"        {",
					"          \"nombre\": \"Almacenes Éxito S.A.\",",
					"          \"latitud\": 123456,",
					"          \"longitud\": 987654,",
					"          \"sitioweb\": \"https://www.exito.com/\"",
					"        }",
					"        )",
					"      }",
					"    };",
					"    pm.sendRequest(postRequest2, (error, response) => {",
					"      var data = response.json()",
					"      pm.globals.set(\"supermercado_id\", error ? null : data.id);",
					"    });",
					"}",
					"",
					"if (!pm.globals.has('supermercado_id_2')) {",
					"    const postRequest3 = {",
					"      url: pm.variables.get('baseUrl') + '/supermarkets',",
					"      method: 'POST',",
					"      header: {",
					"        'Content-Type': 'application/json',",
					"        'X-Foo': 'bar'",
					"      },",
					"      body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify(",
					"        {",
					"          \"nombre\": \"Almacenes Jumbo S.A.\",",
					"          \"latitud\": 112233,",
					"          \"longitud\": 998877,",
					"          \"sitioweb\": \"https://www.jumbo.com/\"",
					"        }",
					"        )",
					"      }",
					"    };",
					"    pm.sendRequest(postRequest3, (error, response) => {",
					"      var data = response.json()",
					"      pm.globals.set(\"supermercado_id_2\", error ? null : data.id);",
					"    });",
					"}",
					"",
					"console.log(pm.globals.get(\"ciudad_id\"));",
					"console.log(pm.globals.get(\"supermercado_id\"));",
					"console.log(pm.globals.get(\"supermercado_id_2\"));",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}